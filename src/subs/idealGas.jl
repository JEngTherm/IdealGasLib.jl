#----------------------------------------------------------------------------------------------#
#                                  Ideal Gas Substance Model                                   #
#----------------------------------------------------------------------------------------------#

import Base: show

# TODO: remove this after EngThermBase's new release
import EngThermBase: PREC, EXAC, BASE

# Type declaration
struct idealGas{ùóΩ<:PREC,ùòÖ<:EXAC,ùóõ<:Heat} <: Substance{ùóΩ,ùòÖ}
	name::String        # The substance name
    form::String        # The chemical formula
    heat::ùóõ             # The heat capacity model
    # Inner copy constructor
    idealGas(x::idealGas{ùóΩ,ùòÖ,ùóõ}) where {ùóΩ,ùòÖ,ùóõ} = begin
        new{ùóΩ,ùòÖ,ùóõ}(x.name, x.form, x.heat)
    end
    # Inner checking & promoting constructor
    idealGas(NAM::AbstractString,
             FOR::AbstractString,
             CPM::ùóõ) where {ùóõ<:Heat{ùóΩ,ùòÖ}} where {ùóΩ,ùòÖ} = begin
        new{ùóΩ,ùòÖ,ùóõ}(NAM, FOR, CPM)
    end
end

# Type exporting
export idealGas

# Type displaying
deco(x::idealGas) = Symbol("ideal gas")

Base.show(io::IO, x::idealGas{ùóΩ,ùòÖ,ùóõ}) where {ùóΩ,ùòÖ,ùóõ} = begin
    if DEF[:pprint]
        print(io,
            "$(x.name) $(string(deco(x))) \"$(x.form)\" ",
            "with $(x.heat)"
        )
    else
        Base.show_default(io, x)
    end
end

# Type plain info access functions

"""
`(Tref(GAS::idealGas{ùóΩ,ùòÖ})::sysT{ùóΩ,ùòÖ}) where {ùóΩ,ùòÖ}`\n
Returns a particular ideal `GAS`'s reference state temperature.
"""
(Tref(GAS::idealGas{ùóΩ,ùòÖ})::sysT{ùóΩ,ùòÖ}) where {ùóΩ,ùòÖ} = Tref(GAS.heat)      # fallback

"""
`(Pref(GAS::idealGas{ùóΩ,ùòÖ})::sysP{ùóΩ,ùòÖ}) where {ùóΩ,ùòÖ}`\n
Returns a particular ideal `GAS`'s reference state pressure.
"""
(Pref(GAS::idealGas{ùóΩ,ùòÖ})::sysP{ùóΩ,ùòÖ}) where {ùóΩ,ùòÖ} = Pref(GAS.heat)      # fallback

"""
`(sref(GAS::idealGas{ùóΩ,ùòÖ,ùóØ})::sAmt{ùóΩ,ùòÖ,ùóØ}) where {ùóΩ,ùòÖ,ùóØ}`\n
Returns a particular ideal `GAS`'s reference state specific entropy in the base `ùóØ`.
"""
(sref(GAS::idealGas{ùóΩ,ùòÖ,ùóØ})::sAmt{ùóΩ,ùòÖ,ùóØ}) where {ùóΩ,ùòÖ,ùóØ} = sref(GAS.heat)      # fallback

